name: Build, Publish and Run Container

on:
  push:
    branches:
      - master

env:
  REPO_NAME: kejiah
  IMAGE_TAG: kejiah-wallet-server
  ENVIRONMENT: latest
  CONTAINER_NAME: kejiah-wallet-server-container

jobs:
  build-and-publish:
    runs-on: [ubuntu-latest]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file from Secret
        id: import-env
        run: |
          echo "${{ secrets.PORT }}" >> .env
          echo "${{ secrets.WHITE_LISTED_DOMAINS }}" >> .env
          echo "${{ secrets.NODE_ENV }}" >> .env
          echo "${{ secrets.DB_HOST }}" >> .env
          echo "${{ secrets.DB_PORT }}" >> .env
          echo "${{ secrets.DB_SCHEMA }}" >> .env
          echo "${{ secrets.POSTGRES_USER }}" >> .env
          echo "${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "${{ secrets.POSTGRES_DB }}" >> .env
          echo "${{ secrets.DATABASE_URL }}" >> .env
          echo "${{ secrets.REDIS_CACHE_HOST }}" >> .env
          echo "${{ secrets.REDIS_CACHE_PORT }}" >> .env
          echo "${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
          echo "${{ secrets.SALTWORKFACTOR }}" >> .env
          echo "${{ secrets.ACCESSTOKENTTL }}" >> .env
          echo "${{ secrets.REFRESHTOKENTTL }}" >> .env
          echo "${{ secrets.MAILING_EMAIL }}" >> .env
          echo "${{ secrets.MAILING_PASSWORD }}" >> .env
          echo "${{ secrets.JWT_PUBLIC_KEY }}" >> .env
          echo "${{ secrets.JWT_PRIVATE_KEY }}" >> .env
          echo "${{ secrets.PAYSTACK_SECRET_KEY }}" >> .env
      - uses: cardinalby/export-env-action@v2
        with:
          mask: false
          envFile: '.env'

      - name: Build docker image
        run: docker build -t $IMAGE_TAG .

      - name: Publish image to docker hub
        run: docker push $REPO_NAME/$IMAGE_TAG:$ENVIRONMENT

  # run:
  #   needs: build
  #   runs-on: [self-hosted]
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull $IMAGE_TAG:$ENVIRONMENT

  #     - name: Delete old container
  #       run: docker rm -f $CONTAINER_NAME

  # - name: Run Prettier
  #   run: docker run $IMAGE_TAG:$ENVIRONMENT sh -c 'npx prisma migrate deploy'

  #     - name: Run docker container
  #       run: docker run -p 5000:5000 $IMAGE_TAG:$ENVIRONMENT -d --name $CONTAINER_NAME
